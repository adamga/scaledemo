@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    var appSettings = System.Configuration.ConfigurationManager.AppSettings;
    var connectionStrings = System.Configuration.ConfigurationManager.ConnectionStrings;

    var dbRead = appSettings["dbRead"];
    var currentLocation = appSettings["siteName"];
    var blob = appSettings["blobContainer"]; ;
    var queue = appSettings["queueName"]; ;
    
    var storageConfig = connectionStrings[currentLocation].ConnectionString;
    var thisSite = new GalleryHelpers.SiteLocation(currentLocation, storageConfig, blob, queue);
    var db = Database.Open(dbRead);
    var aSH = new GalleryHelpers.azureStorageHelper(thisSite.storageAccount, thisSite.storageAccountKey);
    
    var photoId = UrlData[0].AsInt();

    var photo = db.QuerySingle("SELECT * FROM Photos WHERE Id = @0", photoId);
    if (photo == null) 
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;        
    }

    WebSecurity.RequireUser(photo.UserId);

    Page.Title = "Edit Photo - " + photo.FileTitle;

    Validation.RequireField("fileTitle", "You must specify a name");
    Validation.RequireField("description", "You must specify a description");

    if (IsPost && Validation.IsValid()) 
    {
        var editPicture = new GalleryHelpers.Photos();

        editPicture.id = photoId;
        editPicture.fileTitle = Request["FileTitle"];
        editPicture.description = Request["Description"];

        var operationMessage = new GalleryHelpers.Message();

        operationMessage.operation = "update";
        operationMessage.galleryObject = editPicture.ToString();
        operationMessage.serializedobject = Newtonsoft.Json.JsonConvert.SerializeObject(editPicture);

        aSH.enqueue(queue, operationMessage);

        System.Threading.Thread.Sleep(500);
        Response.Redirect(Href("View", photo.Id));
    }
}

<h1>Edit @photo.FileTitle</h1>

<section id="sidebar">
    <form method="post">
        <fieldset class="no-legend">
            <legend>Edit @photo.FileTitle</legend>
            <ol>
                <li>
                    <label for="fileTitle">Name:</label>
                    <input type="text" name="fileTitle" title="Photo name" value="@photo.FileTitle" placeholder="Photo Name" @Validation.For("fileTitle") />
                    @Html.ValidationMessage("FileTitle")
                </li>
                <li>
                    <label for="description">Description:</label>
                    <textarea name="description" title="Photo description" rows="4" cols="30" placeholder="Photo description" @Validation.For("description") >@photo.Description</textarea>
                    @Html.ValidationMessage("Description")
                </li>
            </ol>
            <p class="form-actions" data-role="controlgroup" data-type="horizontal">
                <input type="submit" value="Save Changes" title="Save changes" />
                <a data-role="button" href="~/Photo/View/@photoId" title="Cancel changes">Cancel</a>
            </p>
        </fieldset>
    </form>
</section>

<img alt="@Html.AttributeEncode(photo.FileTitle)" src="@thisSite.storageRoot/@thisSite.blobContainer/small/@photo.primaryUri" />